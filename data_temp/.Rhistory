mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(aes(xintercept = as.integer(as.Date("2020-10-27"))), label="lol")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
siD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
siD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
siD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)/1000) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)/100) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)/10) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)/1) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("United States")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(aes(xintercept = as.integer(as.Date("2020-08-24")), label = "lol"))
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(aes(xintercept = as.integer(as.Date("2020-08-24")), label = "\nlol"))
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(aes(xintercept = as.integer(as.Date("2020-08-24")), label = "\nlol", y=20))
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
defMat<-read.cs("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
defMat<-read.csv("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
View(defMat)
View(defMat)
head(defMat)
defMat %>% arrange(name1, name2) %>% pivot_wider(names_from=name2, values_from=ally)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
library(tidyverse)
library(magrittr)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally'
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<=defMat[,-1]
defMat
defMat<=defMat[,-1]
defMat<=defMat[,-1]
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<=defMat[,-1]
library(tidyverse)
library(magrittr)
library(tidyverse)
library(magrittr)
defMat<-read.csv("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
head(defMat)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<=defMat[,-1]
library(igraph)
install.packages(igraph)
install.packages(igraph)
install.packages("igraph")
library(igraph)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat), weighted=NULL, mode="directed",diag=FALSE)
plot(mygraph)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<-defMat[,-1]
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat), weighted=NULL,
mode="directed", diag=FALSE)
delete.vertices(mygraph, which(degree(mygraph)==0))
library(igraph)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat), weighted=NULL,
mode="directed", diag=FALSE)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat),
weighted=NULL,mode="directed",
diag=FALSE)
defMat<-defMat[,-1]
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat),
weighted=NULL,mode="directed",
diag=FALSE)
library(tidyverse)
library(magrittr)
defMat<-read.csv("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
head(defMat)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<-defMat[,-1]
library(igraph)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat),
weighted=NULL,mode="directed",
diag=FALSE)
View(defMat)
defMat<-read.csv("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
head(defMat)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
View(defMat)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat),
weighted=NULL,mode="directed",
diag=FALSE)
install.packages(rvest)
install.packages("rvest")
library(tidyverse)
library(rvest)
library(magrittr)
myurl <- "https://www.imdb.com/title/tt0068646/"
myhtml<-read_html(myurl)
View(myhtml)
View(myhtml)
mycast<-html_nodes(myhtml, "#titleCast")
mycast
mycast<-html_nodes(myhtml, "#titleCast") %>% html_text()
mycast
mycast<-html_nodes(myhtml, "#titleCast") %>% html_table()
mycast<-html_nodes(myhtml, "table") %>% html_table()
mycast
mydat<-mycast %>% extract2(1)
View(mydat)
mydat<-mydat[-1,c(2,4)]
View(mydat)
names(mydat)<-c("Actor", "Role")
View(mydat)
library(stringr)
mydat<-mydat %>% mutate(Role=str_squish(Role))
View(mydat)
library(igraph)
g <- sample_degseq(rep(2,100))
library(igraph)
g <- sample_degseq(rep(2,100))
g
degree(g)
g2 <- sample_degseq(1:10, 10:1)
degree(g2)
g2 <- sample_degseq(6,6,5)
degree(g2)
g2 <- sample_degseq([6,6,5])
g2 <- sample_degseq(6)
degree(g2)
g2 <- sample_degseq(6,1)
g2 <- sample_degseq(6)
degree(g2)
utdegrees <- c(6,6,5,3,2,2,2)
g <- sample_degseq(outdegrees)
outdegrees <- c(6,6,5,3,2,2,2)
g <- sample_degseq(outdegrees)
get.adjacency(g)
g
plot(g)
plot(g)
plot(g)
plot(g)
outdegrees <- c(6,6,6,6,6)
g <- sample_degseq(outdegrees)
plot(g)
outdegrees <- c(6,6,6,6,6,6)
g <- sample_degseq(outdegrees)
plot(g)
get.adjacency(g)
outdegrees <- c(1,0,0,5,0,6,6,4,8,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(6,6,4,8,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(6,6,4,8,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(6,6,4,8,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
g <- sample_degseq(outdegrees)
outdegrees <- c(6,6,6,6,6,6)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(1,2,3,4,5,6)
g <- sample_degseq(outdegrees)
outdegrees <- c(6,6,5,5,4,4,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(100,50,66,48,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(100,50,66,48,3)
g <- sample_degseq(outdegrees)
outdegrees <- c(1,5,6,6,4,8,3)
g <- sample_degseq(outdegrees)
outdegrees <- c(8,6,6,6,4,3,1)
g <- sample_degseq(outdegrees)
get.adjacency(g)
outdegrees <- c(8,6,6,4,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
outdegrees <- c(8,6,6,4,3)
g <- sample_degseq(outdegrees)
outdegrees <- c(8,6,6,4,3,1)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
plot(g)
plot(g)
plot(g)
is_bipartite(g)
is_bipartite(acyclic)
is_acyclic(g)
is_dag(g)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/")
str(read.csv("^GSPC.csv",sep=",",header = TRUE))
library(leaflet)
library(tigris)
library(sf)
library(raster)
library(rgeos)
library(mapview)
library(maptools)
library(sp)
library(maps)
tx <- tigris::counties(state = "TX", cb=T)
leaflet(tx) %>%
addTiles() %>%
addPolygons(color = "grey", fillOpacity = 0.1, smoothFactor = 0.5, weight = 2)
USA <- getData(name = "GADM", country = "USA", level = 2)
USA
USA[1]
mapview(USA[1])
mapview(USA)
USA[tx]
USA[2]
USA[60]
USA[50]
USA[49]
USA[4]
USA[4,]
USA[3,]
USA[3,]
USA[4]
USA[4][1]
USA <- getData(name = "GADM", country = "USA", state = "TX", level = 2)
mc <- subset(us, NAME_1=="Texas")
mc <- subset(USA, NAME_1=="Texas")
texas <- subset(USA, NAME_1=="Texas")
plot(Texas)
mapview(texas)
wld <- rasterToPolygons(raster(ncol = 1, nrow = 1, crs = proj4string(texas)))
msk <- gDifference(wld, texas)
m <- mapview(msk, color = "white", alpha = 1, alpha.regions = 1) + texas
m
m <- mapview(msk, color = "grey", alpha = 1, alpha.regions = 1) + texas
m
m <- mapview(msk, color = "grey", alpha = 1, alpha.regions = 2) + texas
m
m <- mapview(msk, color = "grey", alpha = 1, alpha.regions = 1) + texas
m <- mapview(msk, color = "grey", alpha = 1, alpha.regions = 1)
m
m <- mapview(msk, color = "grey", alpha = 1, alpha.regions = 1) + tx
m
m <- mapview(msk, color = "grey", alpha = 1, alpha.regions = 1) + texas
m
msk <- gDifference(wld, tx)
msk <- gDifference(wld, texas)
m <- mapview(msk, color = "grey", alpha = 1, alpha.regions = 1) + texas
m
tx <- tigris::counties(state = "TX", cb=T)
leaflet(tx) %>%
addTiles() %>%
addPolygons(color = "grey", fillOpacity = 0.1, smoothFactor = 0.5, weight = 2)
USA <- getData(name = "GADM", country = "USA", state = "TX", level = 2)
# counties for Texas
library(leaflet)
library(tigris)
library(sf)
library(raster)
library(rgeos)
library(mapview)
library(maptools)
library(sp)
library(maps)
USA <- getData(name = "GADM", country = "USA", state = "TX", level = 2)
USA <- getData(name = "GADM", country = "USA", state = "TX", level = 2)
texas <- subset(USA, NAME_1=="Texas")
wld <- rasterToPolygons(raster(ncol = 1, nrow = 1, crs = proj4string(texas)))
msk <- gDifference(wld, texas)
m <- mapview(msk, color = "grey", alpha = 1, alpha.regions = 1) + texas
m
m <- mapview(msk, color = "white", alpha = 1, alpha.regions = 1) + texas
m
USA <- getData(name = "GADM", country = "USA", state = "TX", level = 2)
USA <- getData(name = "GADM", country = "USA", level = 2)
texas <- subset(USA, NAME_1=="Texas")
wld <- rasterToPolygons(raster(ncol = 1, nrow = 1, crs = proj4string(texas)))
msk <- gDifference(wld, texas)
m <- mapview(msk, color = "white", alpha = 1, alpha.regions = 1) + texas
m
mapview(msk)
mapview(msk) %>% addPolygons(color = "grey", fillOpacity = 0.1, smoothFactor = 0.5, weight = 2)
leaflet(msk)
(texas)
leaflet(texas)
mapview(texas)
m <- mapview(msk, color = "white", alpha = 1, alpha.regions = 1) + texas
tx <- tigris::counties(state = "TX", cb=T)
leaflet(tx) %>%
addTiles() %>%
addPolygons(color = "grey", fillOpacity = 0.1, smoothFactor = 0.5, weight = 2)
texas.sp <- map2SpatialPolygons(texas.map, IDs=texas.map.ids,
proj4string=CRS("+proj=longlat +datum=WGS84"))
texas.sp <- map2SpatialPolygons(texas, IDs=texas.ids,
proj4string=CRS("+proj=longlat +datum=WGS84"))
texas.sp <- map2SpatialPolygons(texas, IDs=texas,
proj4string=CRS("+proj=longlat +datum=WGS84"))
texas.sp <- map2SpatialPolygons(texas, IDs=USA,
proj4string=CRS("+proj=longlat +datum=WGS84"))
texas.map <- map(country, fill = TRUE, col = 1, plot = F)
texas.map <- map(texas, fill = TRUE, col = 1, plot = F)
texas.center <- geocode("texas")
texas.map.ids <- sapply(strsplit(texas.map$names, ':'), function(x) x[1])
texas.sp <- map2SpatialPolygons(texas.map, ID= texas.map.ids, proj4string=CRS("+proj=longlat +datum=WGS84"))
tmp.id.df <- data.frame(ID = names(texas.sp))
rownames(tmp.id.df) <- names(texas.sp)
ita.spdf <- SpatialPolygonsDataFrame(texas.sp, tmp.id.df)
texas.spdf <- SpatialPolygonsDataFrame(texas.sp, tmp.id.df)
l.texas.map <- leaflet( texas.spdf ) %>%
addTiles() %>%
addPolygons( data = ita.spdf, weight = 1, fillColor = "blue", fillOpacity = 0.5 )
l.ita.map
l.texas.map
wld.sp <- rasterToPolygons(raster(ncol = 1, nrow = 1, crs = proj4string(texas.sp)))
texas.sp.mask <- gDifference( wld.sp, texas.sp )
texas.sp.mask <- gDifference(wld.sp, texas.sp)
tmp.id.df <- data.frame(ID = "1")
rownames(tmp.id.df) <- names(texas.sp.mask)
texas.mask.spdf <- SpatialPolygonsDataFrame(texas.sp.mask, tmp.id.df)
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
addTiles() %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
# more masking testing
zoomLevel <- 6
ita.center <- geocode("texas")
library(ggmap)
ita.center <- geocode("texas")
register_google(key="AIzaSyCypbYJVA5Yeht5FI92lq2UUGZHxfdZu84")
ita.center <- geocode("texas")
texas.center <- geocode("texas")
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
# more masking testing
zoomLevel <- 4
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
# more masking testing
zoomLevel <- 5
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
# more masking testing
zoomLevel <- 5.5
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
# more masking testing
zoomLevel <- 5.3
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addProviderTiles("Stamen.TonerLite",
group = "Toner",
options = providerTileOptions(minZoom = 8, maxZoom = 10))
l.texas.mask.map
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addProviderTiles(options = providerTileOptions(minZoom = 8, maxZoom = 10))
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addProviderTiles("Esri.WorldGrayCanvas",
options = providerTileOptions(minZoom=10, maxZoom=18)) %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addProviderTiles("Nicolas.WorldGrayCanvas",
options = providerTileOptions(minZoom=10, maxZoom=18)) %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addProviderTiles("Esri.WorldGrayCanvas",
options = providerTileOptions(minZoom=10, maxZoom=18)) %>%
addPolygons(data = texas.mask.spdf, fillColor = "white", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
l.texas.mask.map <- leaflet(texas.mask.spdf) %>%
setView(lng = texas.center$lon, lat = texas.center$lat, zoom = zoomLevel) %>%
addTiles() %>%
addProviderTiles("Esri.WorldGrayCanvas",
options = providerTileOptions(minZoom=10, maxZoom=18)) %>%
addPolygons(data = texas.mask.spdf, fillColor = "grey", fillOpacity = 1.0, color = "black", weight = 1)
l.texas.mask.map
setwd("C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker/data_temp")
library(pdftables)
text <- pdf_text("COVIDVaccineAllocation-Week5.pdf")
setwd("C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker/data_temp")
text <- pdf_text("COVIDVaccineAllocation-Week5.pdf")
text <- pdf_text("COVIDVaccineAllocation-Week5.pdf")
library(pdftables)
text <- pdf_text("COVIDVaccineAllocation-Week5.pdf")
library(pdftools)
text <- pdf_text("COVIDVaccineAllocation-Week5.pdf")
convert_pdf("COVIDVaccineAllocation-Week5.pdf", output_file = "week5.csv", format="csv",message = TRUE, api_key = "sldcc9e4wnhk")
df <- read.csv("week5.csv")
names(df) <- as.character(df[1,])
df <- df[2:nrow(df),]
View(df)
text <- pdf_text("COVIDVaccineAllocation-Week3.pdf")
convert_pdf("COVIDVaccineAllocation-Week3.pdf", output_file = "week3.csv", format="csv",message = TRUE, api_key = "sldcc9e4wnhk")
text <- pdf_text("COVIDVaccineAllocation-Week2.pdf")
convert_pdf("COVIDVaccineAllocation-Week2.pdf", output_file = "week2.csv", format="csv",message = TRUE, api_key = "sldcc9e4wnhk")
text <- pdf_text("COVIDVaccineAllocation-Week1.pdf")
convert_pdf("COVIDVaccineAllocation-Week1.pdf", output_file = "week1.csv", format="csv",message = TRUE, api_key = "sldcc9e4wnhk")
convert_pdf("COVIDVaccineAllocation-Week1.pdf", output_file = "week1.csv", format="csv",message = TRUE, api_key = "qzmpa858d2z7")
