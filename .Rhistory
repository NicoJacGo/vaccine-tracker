jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24
"))), col = "red")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24
"))), col = "red")
"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27
"))), col = "red") +
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24
"))), col = "red")
"))), col = "red")+geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red2")
"))), col = "red")+geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "blue")
"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "blue")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "blue")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+theme(legend.title = element_blank(), axis.text = element_blank())
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+theme(axis.text.y=element_blank())
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+theme(axis.text.x=element_blank())
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(label="lol")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(aes(xintercept = as.integer(as.Date("2020-10-27"))), label="lol")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
siD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
siD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
siD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)/1000) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)/100) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)/10) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)/1) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("State of Iowa")
covid_daily %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("United States")
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(aes(xintercept = as.integer(as.Date("2020-08-24")), label = "lol"))
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(aes(xintercept = as.integer(as.Date("2020-08-24")), label = "\nlol"))
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")+geom_text(aes(xintercept = as.integer(as.Date("2020-08-24")), label = "\nlol", y=20))
jcD %>% group_by(date1) %>%
summarise(sum_cases=sum(new_confirmed, na.rm=T), .groups="keep")%>%
ungroup() %>%
arrange(date1) %>%
mutate(mean_cases7=zoo::rollmean(sum_cases,k=7,fill=NA)) %>%
ggplot(aes(x=date1,y=mean_cases7))+geom_line()+theme_bw()+scale_x_date("")+geom_vline(aes(xintercept = as.integer(as.Date("2020-08-24"))), col = "red") + geom_vline(aes(xintercept = as.integer(as.Date("2020-10-27"))), col = "red") + ggtitle("Johnson County")
defMat<-read.cs("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
defMat<-read.csv("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
View(defMat)
View(defMat)
head(defMat)
defMat %>% arrange(name1, name2) %>% pivot_wider(names_from=name2, values_from=ally)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
library(tidyverse)
library(magrittr)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally'
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<=defMat[,-1]
defMat
defMat<=defMat[,-1]
defMat<=defMat[,-1]
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<=defMat[,-1]
library(tidyverse)
library(magrittr)
library(tidyverse)
library(magrittr)
defMat<-read.csv("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
head(defMat)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<=defMat[,-1]
library(igraph)
install.packages(igraph)
install.packages(igraph)
install.packages("igraph")
library(igraph)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat), weighted=NULL, mode="directed",diag=FALSE)
plot(mygraph)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<-defMat[,-1]
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat), weighted=NULL,
mode="directed", diag=FALSE)
delete.vertices(mygraph, which(degree(mygraph)==0))
library(igraph)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat), weighted=NULL,
mode="directed", diag=FALSE)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat),
weighted=NULL,mode="directed",
diag=FALSE)
defMat<-defMat[,-1]
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat),
weighted=NULL,mode="directed",
diag=FALSE)
library(tidyverse)
library(magrittr)
defMat<-read.csv("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
head(defMat)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
defMat<-defMat[,-1]
library(igraph)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat),
weighted=NULL,mode="directed",
diag=FALSE)
View(defMat)
defMat<-read.csv("https://raw.githubusercontent.com/ochyzh/POLS478/master/defmat1914.csv" , header=T)
head(defMat)
defMat %>% arrange(name1, name2) %>%
pivot_wider(names_from=name2, values_from=ally)
View(defMat)
mygraph<-graph_from_adjacency_matrix(as.matrix(defMat),
weighted=NULL,mode="directed",
diag=FALSE)
install.packages(rvest)
install.packages("rvest")
library(tidyverse)
library(rvest)
library(magrittr)
myurl <- "https://www.imdb.com/title/tt0068646/"
myhtml<-read_html(myurl)
View(myhtml)
View(myhtml)
mycast<-html_nodes(myhtml, "#titleCast")
mycast
mycast<-html_nodes(myhtml, "#titleCast") %>% html_text()
mycast
mycast<-html_nodes(myhtml, "#titleCast") %>% html_table()
mycast<-html_nodes(myhtml, "table") %>% html_table()
mycast
mydat<-mycast %>% extract2(1)
View(mydat)
mydat<-mydat[-1,c(2,4)]
View(mydat)
names(mydat)<-c("Actor", "Role")
View(mydat)
library(stringr)
mydat<-mydat %>% mutate(Role=str_squish(Role))
View(mydat)
library(igraph)
g <- sample_degseq(rep(2,100))
library(igraph)
g <- sample_degseq(rep(2,100))
g
degree(g)
g2 <- sample_degseq(1:10, 10:1)
degree(g2)
g2 <- sample_degseq(6,6,5)
degree(g2)
g2 <- sample_degseq([6,6,5])
g2 <- sample_degseq(6)
degree(g2)
g2 <- sample_degseq(6,1)
g2 <- sample_degseq(6)
degree(g2)
utdegrees <- c(6,6,5,3,2,2,2)
g <- sample_degseq(outdegrees)
outdegrees <- c(6,6,5,3,2,2,2)
g <- sample_degseq(outdegrees)
get.adjacency(g)
g
plot(g)
plot(g)
plot(g)
plot(g)
outdegrees <- c(6,6,6,6,6)
g <- sample_degseq(outdegrees)
plot(g)
outdegrees <- c(6,6,6,6,6,6)
g <- sample_degseq(outdegrees)
plot(g)
get.adjacency(g)
outdegrees <- c(1,0,0,5,0,6,6,4,8,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(6,6,4,8,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(6,6,4,8,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(6,6,4,8,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
g <- sample_degseq(outdegrees)
outdegrees <- c(6,6,6,6,6,6)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(1,2,3,4,5,6)
g <- sample_degseq(outdegrees)
outdegrees <- c(6,6,5,5,4,4,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(100,50,66,48,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
outdegrees <- c(100,50,66,48,3)
g <- sample_degseq(outdegrees)
outdegrees <- c(1,5,6,6,4,8,3)
g <- sample_degseq(outdegrees)
outdegrees <- c(8,6,6,6,4,3,1)
g <- sample_degseq(outdegrees)
get.adjacency(g)
outdegrees <- c(8,6,6,4,3)
g <- sample_degseq(outdegrees)
get.adjacency(g)
outdegrees <- c(8,6,6,4,3)
g <- sample_degseq(outdegrees)
outdegrees <- c(8,6,6,4,3,1)
g <- sample_degseq(outdegrees)
get.adjacency(g)
plot(g)
plot(g)
plot(g)
plot(g)
is_bipartite(g)
is_bipartite(acyclic)
is_acyclic(g)
is_dag(g)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/")
str(read.csv("^GSPC.csv",sep=",",header = TRUE))
# Load R packages
library(shiny)
library(shinythemes)
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
runApp('C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker')
setwd("C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker")
test <- read_csv("input_data/test-data.csv")
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(ggmap)) install.packages("ggmap", repos = "http://cran.us.r-project.org")
test <- read_csv("input_data/test-data.csv")
test <- read_csv("C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker/input_data/test_data.csv")
test
View(test)
sources <- distinct(test, Address)
sources <- distinct(test, Address, County)
View(sources)
sources <- distinct(test)
View(sources)
df <- sources
df <- as.data.frame(sources)
View(df)
sources <- distinct(Address, County)
sources <- distinct(test, Address, County)
View(sources)
df <- as.data.frame(sources)
locations_df <- mutate_geocode(df, Address)
?register_google
register_google(key=AIzaSyCypbYJVA5Yeht5FI92lq2UUGZHxfdZu84)
register_google(key="AIzaSyCypbYJVA5Yeht5FI92lq2UUGZHxfdZu84")
locations_df <- mutate_geocode(df, Address)
locations_df <- mutate_geocode(df, County)
locations_df <- geocode(df, Address)
locations_df <- mutate_geocode(df, Address, County)
locations_df <- mutate_geocode(df, County)
test <- read_csv("C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker/input_data/test_data.csv")
sources <- distinct(test, Address, County)
df <- as.data.frame(sources)
locations_df <- mutate_geocode(df, Address)
View(locations_df)
test <- read_csv("C:/Users/fro7e/OneDrive/Desktop/vaccine-tracker/vaccine-tracker/input_data/test_data.csv")
sources <- distinct(test, Address, County)
df <- as.data.frame(sources)
locations_df <- mutate_geocode(df, Address)
View(locations_df)
locations <- as_tibble(locations_df)
View(locations)
if(!require(sf)) install.packages("sf", repos = "http://cran.us.r-project.org")
if(!require(mapview)) install.packages("mapview", repos = "http://cran.us.r-project.org")
locations_sf <- st_as_sf(locations, coords = c("lon", "lat"), crs = 4326)
mapview(locations_sf)
library(mapview)
mapview(locations_sf)
Texas = get_map(location = c(lon = 31.9686, lat = 99.9018), zoom = 13, maptype = "satellite")
Texas = get_map(location = c(lon = -90, lat = 31), zoom = 13, maptype = "satellite")
Texas
?ggmap
ggmapplot(Texas)
ggmapplot(Texas)
Texas = get_map(location = c(lon = -90, lat = 31), zoom = 1)
ggmapplot(Texas)
Texas = get_map(location = c(lon = -90, lat = 31), zoom = 4, maptype = "satellite")
ggmapplot(Texas)
Texas = get_map(location = c(lon = -90, lat = 31), zoom = 7, maptype = "satellite")
ggmapplot(Texas)
Texas = get_map(location = c(lon = -91, lat = 31), zoom = 7, maptype = "satellite")
ggmapplot(Texas)
Texas = get_map(location = c(lon = -100, lat = 31), zoom = 7, maptype = "satellite")
ggmapplot(Texas)
Texas = get_map(location = c(lon = -100, lat = 31), zoom = 4, maptype = "satellite")
ggmapplot(Texas)
Texas = get_map(location = c(lon = -100, lat = 31), zoom = 6, maptype = "satellite")
ggmapplot(Texas)
Texas = get_map(location = c(lon = -100, lat = 31), zoom = 6, maptype = "map")
Texas = get_map(location = c(lon = -100, lat = 31), zoom = 6, maptype = "hybrid")
ggmapplot(Texas)
Texas = get_map(location = c(lon = -100, lat = 31), zoom = 6, maptype = "terrain")
ggmapplot(Texas)
map
mapview(Texas, locations_sf)
mapview(Texas)
mapview(list(Texas, locations_sf),
layer.name = c("Texas", "Locations"))
mapview(locations_sf)
mapview(list(Texas, locations_sf),
layer.name = c("Texas", "Locations"))
mapview(list(franconia, locations_sf),
layer.name = c("Texas", "Locations"))
mapview(list(Texas, locations_sf),
layer.name = c("Texas", "Locations"))
mapview(states)
mapview(franconia)
states <- read_sf("data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-State-Boundaries-Census-2014.shp") %>%
st_zm()
states <- read_sf("data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-State-Boundaries-Census-2014.shp")
mapview(meuse)
data(meuse)
library(lattice)
library(sp)
install.packages(lattice)
install.packages("latice")
install.packages("lattice")
install.packages("lattice")
data(meuse)
data(Texas)
data(texas)
data(lyon)
?sp
Texas = get_map(location = c(lon = -100, lat = 31), zoom = 6, maptype = "terrain")
data(Texas)
data(meuse)
url_modifier <- function(num) {
sprintf(paste0("https://www.dshs.texas.gov/news/updates/COVIDVaccineAllocation-Week", num, ".pdf"))
}
library(tidyverse)
library(rvest)
library(pdftools)
url_modifier <- function(num) {
sprintf(paste0("https://www.dshs.texas.gov/news/updates/COVIDVaccineAllocation-Week", num, ".pdf"))
}
week <- 3
for(i in seq(1, 1, 1)){
week <<- week + i #assigning to global environment
}
url_modifier(week)
download.file(url_modifier(week), basename(url_modifier(week)), quiet = TRUE, mode = "wb")
library(tidyverse)
library(rvest)
library(pdftools)
library(shiny); runApp('app_temp.R')
